# -----
# clasp-3.3.x option parameter file
# Configuration: -DWITH_RANGES=1 -DWITH_ASP=1 -DWITH_OPTIMIZATION=1
# -----
# F: flag (yes = flag set; no = flag removed)
# S: skip (only to model constraints for the parameters; not passed to clasp)
# :[String]: will not be parsed for clasp (only syntatic sugar for the parameter file)
# :[int]: alignment of complex parameters
# i : integer range
# l : logarithmic transformation (n > 0)
# -----
# --- Clingo-DL Options
@0:propagate {no,inverse,partial,partial+,full}[partial]
@0:propagate-root {0,1,2,3}[0]
@0:propagate-budget {0,5,10,50,100}[0]

@0:propagate-root | @0:propagate in {no,inverse,partial,partial+}
@0:propagate-budget | @0:propagate in {no,inverse,partial,partial+}


@0:1:add-mutexes {0,1,2,3}[0]
@0:2:add-mutexes {5,10,50,100}[5]

@0:S:add-mutexes-CUT | @0:1:add-mutexes in {1,2,3}
@0:S:add-mutexes-CUT {yes,no}[no]
@0:2:add-mutexes | @0:S:add-mutexes-CUT in {yes}

@0:file {/home/kstrauch/train-encoding-and-instances/encoding/static_decide.lp} [/home/kstrauch/train-encoding-and-instances/encoding/static_decide.lp]
@0:S:use_static_decide {yes,no}[yes]
@0:file | @0:S:use_static_decide in {yes}

# --- PREPROCESSING - global options
@0:solver {clasp3}[clasp3]
@0:F:learn-explicit{yes,no}[no]
@0:S:sat-prepro {yes,no}[no]
@0:sat-prepro {0}[0]
@0:1:sat-prepro {1,2,3}[2] # algo type
@0:2:sat-prepro [1,50][13]il # iterations
@0:3:sat-prepro [1,50][25]il # cutoff
@0:4:sat-prepro {0}[0] # timelimit -> non deterministic
@0:5:sat-prepro [0,100][0]i # max percent frozen
# ASP OPTIONS
@0:S:eqCond {yes,no}[yes]
@0:no:eq {0}[0]
@0:eq [1,127][5] il
@0:F:backprop{yes,no}[no]
@0:F:eq-dfs{yes,no}[no]
@0:F:no-gamma{yes,no}[no]
@0:trans-ext {all,choice,card,weight,integ,dynamic,no}[no]

@1:configuration {auto,frumpy,jumpy,tweety,handy,crafty,trendy}[auto] # default config for options not explicitly given
@1:partial-check {0,10,20,30,40,50}[0] # only for disjunctive ASP
@1:loops {common,distinct,shared,no}[common]
@1:score-other {no,loop,all}[loop]
# @1:enum-mode {bt, record, auto}[auto]
# OPTIMIZATION OPTIONS
@1:0:opt-strategy {bb,usc} [bb]
@1:1:USC:opt-strategy {oll,one,pmres,k} [oll]
@1:2:USC:opt-strategy [0,7][1]i
@1:2:USCK:opt-strategy [0,1024][0]i
@1:3:USCK:opt-strategy [0,7][1]i
@1:0:opt-usc-shrink {lin,inv,bin,rgs,exp,min,no}[no]
@1:1:opt-usc-shrink [0,12][10]i
@1:1:BB:opt-strategy {lin,hier,inc,dec}[lin]
@1:opt-heuristic {0,1,2,3}[0]
@1:F:restart-on-model {yes,no}[no]
@1:reset-restarts {no,repeat,disable}[no]
# --- HEURISTICS
@1:0:heuristic {Berkmin,Vmtf,Vsids,Unit,Domain,None}[Domain]
@1:1:vsids:heuristic {0,75,85,92,93,94,95,96,97,98,99} [0] # Conditional - heuristic=vsids
@1:1:vmtf:heuristic [1,128][8]il # Conditional - heuristic=vmtf
@1:1:berk:heuristic {0,128,256,512,1024,2048}[0] # Conditional - heuristic=berkmin
@1:S:vsids-progress {yes,no}[no]
@1:No:vsids-progress {no}[no]
@1:1:vsids-progress [80,95][80]i # Conditional - heuristic=vsids
@1:2:vsids-progress [1,15][1]i
@1:3:vsids-progress [100,30000][5000]il
@1:F:init-moms {yes,no}[yes]
@1:F:nant {yes,no}[no]
@1:sign-def {asp,pos,neg,rnd}[asp]
@1:F:sign-fix {yes,no}[no]
@1:score-res {auto,min,set,multiset}[auto] # Conditional - only for lookback heuristics
@1:F:berk-huang {yes,no}[no] # Conditional - heuristic=berkmin
@1:F:vsids-acids {yes,no}[no] # Conditional - heuristic=vsids|doman
@1:0:dom-mod {no,level,pos,true,neg,false,init,factor}[no] # Conditional - heuristic=Domain
@1:1:dom-mod {0,1,8,24}[0] # Conditional - heuristic=Domain
@1:save-progress [0,180][0]i
@1:init-watches {rnd,first,least}[rnd]
@1:1:lookahead {atom,body,hybrid,no}[no]
@1:2:lookahead [1,2147483647][1]il # Conditional - 1:lookahead != no
@1:rand-freq {0.0,0.01,0.02,0.05,0.1}[0.0]
# --- RESTARTS
@1:0:restarts {F,L,D,x,+,no}[x]
# first parameter for all "normal" restarts
@1:1:Simp:restarts [1,65535][100]il
# Luby restarts
@1:S:Luby:aryrestarts {1,2}[1]
@1:2:Luby:restarts [1,65535][1000]il
# Geometric restarts
@1:S:Geo:aryrestarts {2,3}[2]
@1:2:Geo:restarts [1.0,2.0][1.5]
@1:3:Geo:restarts [1,65535][1]il
# Arithmethic restarts
@1:S:Ari:aryrestarts {2,3}[2]
@1:2:Ari:restarts [1,65535][100]il
@1:3:Ari:restarts [1,65535][1]il
# Dynamic restarts
@1:S:Dyn:aryrestarts {2,3}[2]
@1:1:Dyn:restarts [50,1000][100]il
@1:2:Dyn:restarts [0.5,1.0][0.7]
@1:3:Dyn:restarts [20,127][32]il
# Other restart options
@1:F:local-restarts {yes,no}[no]
@1:S:counterCond {yes,no} [no]
@1:1:counter-restarts [1,127][3]il
@1:2:counter-restarts [10,16384][10]il
@1:0:block-restarts {0,1000,2000,5000,7500,10000}[0]
@1:1:block-restarts {1.2,1.4,1.6,1.8,2.0}[2.0]
@1:2:block-restarts {0,5000,10000}[0]
# --- DELETION
@1:S:deletion {yes,no}[yes]
@1:deletion {no}[no]
@1:1:deletion {basic,sort,ipSort,ipHeap}[basic] # Algorithm
@1:2:deletion [10,100][75]i # Fraction to remove
@1:3:deletion {activity,lbd,mixed}[activity] # Score function
@1:1:del-init [1.0,50.0][3.0]
@1:2:del-init [10,1023][10]il
@1:3:del-init [500,32767][32767]i
@1:del-max [32767,2147483647][2147483647]i
@1:del-estimate {0,1,2,3}[0] # only for ASP + PB
@1:del-on-restart [0,50][0]i
@1:1:del-glue [0,8][0]i
@1:2:del-glue {0,1}[0]
@1:0:del-cfl {F,L,x,+,no}[no]
# Deletion conflict schedule
@1:1:del-cfl [1,65535][128]il
@1:2:G:del-cfl [1.0,2.0][1.5]
@1:2:A:del-cfl [1,65535][100]il
@1:3:del-cfl [10,65535][10]il
@1:S:del-grow {yes,no}[yes] # Conditional: enable/disable grow strategy
@1:del-grow {0}[0]
@1:1:del-grow [1.0,5.0][1.1]
@1:2:del-grow [0.0,100.0][3.0]
@1:S:growSched {yes,no}[no]
# Deletion size schedule
@1:3:del-grow {F,L,x,+}[+]
@1:4:del-grow [1,65535][128]il
@1:5:G:del-grow [1.0,2.0][1.5]
@1:5:A:del-grow [1,65535][100]il
@1:6:del-grow [10,65535][10]il
# --- MISC
@1:0:strengthen {local,recursive,no}[local] # Conditional
@1:1:strengthen {all,short,binary}[all]
@1:2:strengthen {yes,no}[yes]
@1:otfs {0,1,2}[0]
@1:1:update-lbd {no,less,glucose,pseudo}[no]
@1:2:update-lbd [0,30][0]i
@1:F:update-act {yes,no}[no]
@1:reverse-arcs {0,1,2,3}[0]
@1:S:contraction {yes,no}[no]
@1:No:contraction {no}[no]
@1:contraction [1,1023][250]il # Conditional
# --- CONDITIONS/CONSTRAINTS
# sat-prepro
@0:sat-prepro | @0:S:sat-prepro in {no}
@0:1:sat-prepro | @0:S:sat-prepro in {yes}
@0:2:sat-prepro | @0:S:sat-prepro in {yes}
@0:3:sat-prepro | @0:S:sat-prepro in {yes}
@0:4:sat-prepro | @0:S:sat-prepro in {yes}
@0:5:sat-prepro | @0:S:sat-prepro in {yes}
@0:no:eq | @0:S:eqCond in {no}
@0:eq | @0:S:eqCond in {yes}
@0:F:eq-dfs | @0:S:eqCond in {yes}
# heuristic conds
@1:F:berk-huang | @1:0:heuristic in {Berkmin}
@1:F:vsids-acids | @1:0:heuristic in {Vsids,Domain}
@1:score-res | @1:0:heuristic in {Berkmin,Vmtf,Vsids,Domain}
@1:0:dom-mod | @1:0:heuristic in {Domain}
@1:1:dom-mod | @1:0:heuristic in {Domain}
@1:1:vsids:heuristic | @1:0:heuristic in {Vsids,Domain}
@1:1:vmtf:heuristic | @1:0:heuristic in {Vmtf}
@1:1:berk:heuristic | @1:0:heuristic in {Berkmin}
@1:S:vsids-progress | @1:0:heuristic in {Vsids,Domain}
@1:No:vsids-progress | @1:S:vsids-progress in {no}
@1:1:vsids-progress | @1:S:vsids-progress in {yes}
@1:2:vsids-progress | @1:S:vsids-progress in {yes}
@1:3:vsids-progress | @1:S:vsids-progress in {yes}
@1:2:lookahead | @1:1:lookahead in {atom,body,hybrid}
# opt conds
@1:1:BB:opt-strategy | @1:0:opt-strategy in {bb}
@1:1:USC:opt-strategy | @1:0:opt-strategy in {usc}
@1:2:USC:opt-strategy | @1:1:USC:opt-strategy in {oll,one,pmres}
@1:2:USCK:opt-strategy| @1:1:USC:opt-strategy in {k}
@1:3:USCK:opt-strategy| @1:1:USC:opt-strategy in {k}
@1:0:opt-usc-shrink | @1:0:opt-strategy in {usc}
@1:1:opt-usc-shrink | @1:0:opt-strategy in {usc}
@1:1:opt-usc-shrink | @1:0:opt-usc-shrink in {lin,inv,bin,rgs,exp,min}
# lookback conds
# ... |@1:F:no-lookback in {no}
# restarts conds
@1:1:Simp:restarts | @1:0:restarts in {F,L,x,+}
@1:S:Luby:aryrestarts | @1:0:restarts in {L}
@1:2:Luby:restarts | @1:0:restarts in {L}
@1:2:Luby:restarts | @1:S:Luby:aryrestarts in {2}
@1:S:Geo:aryrestarts | @1:0:restarts in {x}
@1:2:Geo:restarts | @1:0:restarts in {x}
@1:3:Geo:restarts | @1:0:restarts in {x}
@1:3:Geo:restarts | @1:S:Geo:aryrestarts in {3}
@1:S:Ari:aryrestarts | @1:0:restarts in {+}
@1:2:Ari:restarts | @1:0:restarts in {+}
@1:3:Ari:restarts | @1:0:restarts in {+}
@1:3:Ari:restarts | @1:S:Ari:aryrestarts in {3}
# dynamic restarts
@1:1:Dyn:restarts | @1:0:restarts in {D}
@1:S:Dyn:aryrestarts | @1:0:restarts in {D}
@1:2:Dyn:restarts | @1:0:restarts in {D}
@1:3:Dyn:restarts | @1:0:restarts in {D}
@1:1:counter-restarts | @1:S:counterCond in {yes}
@1:1:counter-restarts | @1:0:restarts in {F,D,L,x,+}
@1:2:counter-restarts | @1:S:counterCond in {yes}
@1:2:counter-restarts | @1:0:restarts in {F,D,L,x,+}
@1:1:block-restarts | @1:0:block-restarts in {1000,2000,5000,7500,10000}
@1:2:block-restarts | @1:0:block-restarts in {1000,2000,5000,7500,10000}
# deletion
@1:deletion | @1:S:deletion in {no}
@1:1:deletion | @1:S:deletion in {yes}
@1:2:deletion | @1:S:deletion in {yes}
@1:3:deletion | @1:S:deletion in {yes}
@1:1:del-init | @1:S:deletion in {yes}
@1:2:del-init | @1:S:deletion in {yes}
@1:3:del-init | @1:S:deletion in {yes}
@1:del-max | @1:S:deletion in {yes}
@1:del-estimate | @1:S:deletion in {yes}
@1:del-on-restart | @1:S:deletion in {yes}
@1:1:del-glue | @1:S:deletion in {yes}
@1:2:del-glue | @1:S:deletion in {yes}
@1:0:del-cfl | @1:S:deletion in {yes}
@1:1:del-cfl | @1:0:del-cfl in {F,L,x,+}
@1:2:G:del-cfl | @1:0:del-cfl in {x}
@1:2:A:del-cfl | @1:0:del-cfl in {+}
@1:3:del-cfl | @1:0:del-cfl in {x,+}
@1:del-grow | @1:S:del-grow in {no}
@1:1:del-grow | @1:S:del-grow in {yes}
@1:2:del-grow | @1:S:del-grow in {yes}
@1:S:growSched | @1:S:del-grow in {yes}
@1:3:del-grow | @1:S:growSched in {yes}
@1:4:del-grow | @1:S:growSched in {yes}
@1:5:G:del-grow | @1:3:del-grow in {x}
@1:5:A:del-grow | @1:3:del-grow in {+}
@1:6:del-grow | @1:3:del-grow in {x,+}
{@1:S:deletion=yes, @1:0:del-cfl=no, @1:S:del-grow=no}
{@1:S:deletion=no, @1:S:del-grow=yes}
# misc
@1:1:strengthen | @1:0:strengthen in {local,recursive}
@1:2:strengthen | @1:0:strengthen in {local,recursive}
@1:contraction | @1:S:contraction in {yes}
@1:No:contraction | @1:S:contraction in {no}
@1:2:update-lbd | @1:1:update-lbd in {less,glucose,pseudo}
# Forbidden:
# {@1:F:restart-on-model=yes, @1:enum-mode=bt}



# -----
# clasp-3.3.x option parameter file
# Configuration: -DWITH_RANGES=1 -DWITH_ASP=1 -DWITH_OPTIMIZATION=1
# -----
# F: flag (yes = flag set; no = flag removed)
# S: skip (only to model constraints for the parameters; not passed to clasp)
# :[String]: will not be parsed for clasp (only syntatic sugar for the parameter file)
# :[int]: alignment of complex parameters
# i : integer range
# l : logarithmic transformation (n > 0)
# -----
@2:configuration {auto,frumpy,jumpy,tweety,handy,crafty,trendy}[crafty] # default config for options not explicitly given

@2:partial-check {0,10,20,30,40,50}[0] # only for disjunctive ASP
@2:loops {common,distinct,shared,no}[common]
@2:score-other {auto,no,loop,all}[auto]
# @1:enum-mode {bt, record, auto}[auto]
# OPTIMIZATION OPTIONS
@2:0:opt-strategy {usc,bb} [usc]
@2:1:BB:opt-strategy {lin,hier,inc,dec}[lin]
@2:1:USC:opt-strategy {oll,one,pmres,k} [oll]
@2:2:USC:opt-strategy [0,7][0]i
@2:2:USCK:opt-strategy [0,1024][0]i
@2:3:USCK:opt-strategy [0,7][1]i
@2:0:opt-usc-shrink {lin,inv,bin,rgs,exp,min,no}[no]
@2:1:opt-usc-shrink [0,12][10]i
@2:opt-heuristic {0,1,2,3}[0]
@2:F:restart-on-model {yes,no}[no]
@2:reset-restarts {no,repeat,disable}[no]
# --- HEURISTICS
@2:0:heuristic {Berkmin,Vmtf,Vsids,Unit,Domain,None}[Domain]
@2:1:vsids:heuristic {0,75,85,92,93,94,95,96,97,98,99} [0] # Conditional - heuristic=vsids
@2:1:vmtf:heuristic [1,128][8]il # Conditional - heuristic=vmtf
@2:1:berk:heuristic {0,128,256,512,1024,2048}[0] # Conditional - heuristic=berkmin
@2:S:vsids-progress {yes,no}[no]
@2:No:vsids-progress {no}[no]
@2:1:vsids-progress [80,95][80]i # Conditional - heuristic=vsids
@2:2:vsids-progress [1,15][1]i
@2:3:vsids-progress [100,30000][5000]il
@2:F:init-moms {yes,no}[yes]
@2:F:nant {yes,no}[no]
@2:sign-def {asp,pos,neg,rnd}[asp]
@2:F:sign-fix {yes,no}[no]
@2:score-res {auto,min,set,multiset}[auto] # Conditional - only for lookback heuristics
@2:F:berk-huang {yes,no}[no] # Conditional - heuristic=berkmin
@2:F:vsids-acids {yes,no}[no] # Conditional - heuristic=vsids|doman
@2:0:dom-mod {no,level,pos,true,neg,false,init,factor}[no] # Conditional - heuristic=Domain
@2:1:dom-mod {0,1,8,24}[0] # Conditional - heuristic=Domain
@2:save-progress [0,180][180]i
@2:init-watches {rnd,first,least}[rnd]
#@1:1:lookahead {atom,body,hybrid,no}[no]
#@1:2:lookahead [1,2147483647][1]il # Conditional - 1:lookahead != no
@2:rand-freq {0.0,0.01,0.02,0.05,0.1}[0.0]
# --- RESTARTS
@2:0:restarts {F,L,D,x,+,no}[x]
# first parameter for all "normal" restarts
@2:1:Simp:restarts [1,65535][100]il
# Luby restarts
@2:S:Luby:aryrestarts {1,2}[1]
@2:2:Luby:restarts [1,65535][1000]il
# Geometric restarts
@2:S:Geo:aryrestarts {2,3}[2]
@2:2:Geo:restarts [1.0,2.0][1.5]
@2:3:Geo:restarts [1,65535][1]il
# Arithmethic restarts
@2:S:Ari:aryrestarts {2,3}[2]
@2:2:Ari:restarts [1,65535][100]il
@2:3:Ari:restarts [1,65535][1]il
# Dynamic restarts
@2:S:Dyn:aryrestarts {2,3}[2]
@2:1:Dyn:restarts [50,1000][100]il
@2:2:Dyn:restarts [0.5,1.0][0.7]
@2:3:Dyn:restarts [20,127][32]il
# Other restart options
@2:F:local-restarts {yes,no}[no]
@2:S:counterCond {yes,no} [no]
@2:1:counter-restarts [1,127][3]il
@2:2:counter-restarts [10,16384][12]il
@2:0:block-restarts {0,1000,2000,5000,7500,10000}[0]
@2:1:block-restarts {1.2,1.4,1.6,1.8,2.0}[1.4]
@2:2:block-restarts {0,5000,10000}[0]
# --- DELETION
@2:S:deletion {yes,no}[yes]
@2:deletion {no}[no]
@2:1:deletion {basic,sort,ipSort,ipHeap}[basic] # Algorithm
@2:2:deletion [10,100][75]i # Fraction to remove
@2:3:deletion {activity,lbd,mixed}[activity] # Score function
@2:1:del-init [1.0,50.0][3.0]
@2:2:del-init [10,1023][10]il
@2:3:del-init [500,32767][32767]i
@2:del-max [32767,2147483647][2147483647]i
@2:del-estimate {0,1,2,3}[0] # only for ASP + PB
@2:del-on-restart [0,50][0]i
@2:1:del-glue [0,8][0]i
@2:2:del-glue {0,1}[0]
@2:0:del-cfl {F,L,x,+,no}[no]
# Deletion conflict schedule
@2:1:del-cfl [1,65535][128]il
@2:2:G:del-cfl [1.0,2.0][1.5]
@2:2:A:del-cfl [1,65535][100]il
@2:3:del-cfl [10,65535][10]il
@2:S:del-grow {yes,no}[yes] # Conditional: enable/disable grow strategy
@2:del-grow {0}[0]
@2:1:del-grow [1.0,5.0][1.1]
@2:2:del-grow [0.0,100.0][3.0]
@2:S:growSched {yes,no}[no]
# Deletion size schedule
@2:3:del-grow {F,L,x,+}[+]
@2:4:del-grow [1,65535][128]il
@2:5:G:del-grow [1.0,2.0][1.5]
@2:5:A:del-grow [1,65535][100]il
@2:6:del-grow [10,65535][10]il
# --- MISC
@2:0:strengthen {local,recursive,no}[local] # Conditional
@2:1:strengthen {all,short,binary}[all]
@2:2:strengthen {yes,no}[yes]
@2:otfs {0,1,2}[0]
@2:1:update-lbd {no,less,glucose,pseudo}[no]
@2:2:update-lbd [0,30][0]i
@2:F:update-act {yes,no}[no]
@2:reverse-arcs {0,1,2,3}[0]
@2:S:contraction {yes,no}[no]
@2:No:contraction {no}[no]
@2:contraction [1,1023][250]il # Conditional
# --- CONDITIONS/CONSTRAINTS
# heuristic conds
@2:F:berk-huang | @2:0:heuristic in {Berkmin}
@2:F:vsids-acids | @2:0:heuristic in {Vsids,Domain}
@2:score-res | @2:0:heuristic in {Berkmin,Vmtf,Vsids,Domain}
@2:0:dom-mod | @2:0:heuristic in {Domain}
@2:1:dom-mod | @2:0:heuristic in {Domain}
@2:1:vsids:heuristic | @2:0:heuristic in {Vsids,Domain}
@2:1:vmtf:heuristic | @2:0:heuristic in {Vmtf}
@2:1:berk:heuristic | @2:0:heuristic in {Berkmin}
@2:S:vsids-progress | @2:0:heuristic in {Vsids,Domain}
@2:No:vsids-progress | @2:S:vsids-progress in {no}
@2:1:vsids-progress | @2:S:vsids-progress in {yes}
@2:2:vsids-progress | @2:S:vsids-progress in {yes}
@2:3:vsids-progress | @2:S:vsids-progress in {yes}
#@1:2:lookahead | @1:1:lookahead in {atom,body,hybrid}
# opt conds
@2:1:BB:opt-strategy | @2:0:opt-strategy in {bb}
@2:1:USC:opt-strategy | @2:0:opt-strategy in {usc}
@2:2:USC:opt-strategy | @2:1:USC:opt-strategy in {oll,one,pmres}
@2:2:USCK:opt-strategy| @2:1:USC:opt-strategy in {k}
@2:3:USCK:opt-strategy| @2:1:USC:opt-strategy in {k}
@2:0:opt-usc-shrink | @2:0:opt-strategy in {usc}
@2:1:opt-usc-shrink | @2:0:opt-strategy in {usc}
@2:1:opt-usc-shrink | @2:0:opt-usc-shrink in {lin,inv,bin,rgs,exp,min}
# lookback conds
# ... |@1:F:no-lookback in {no}
# restarts conds
@2:1:Simp:restarts | @2:0:restarts in {F,L,x,+}
@2:S:Luby:aryrestarts | @2:0:restarts in {L}
@2:2:Luby:restarts | @2:0:restarts in {L}
@2:2:Luby:restarts | @2:S:Luby:aryrestarts in {2}
@2:S:Geo:aryrestarts | @2:0:restarts in {x}
@2:2:Geo:restarts | @2:0:restarts in {x}
@2:3:Geo:restarts | @2:0:restarts in {x}
@2:3:Geo:restarts | @2:S:Geo:aryrestarts in {3}
@2:S:Ari:aryrestarts | @2:0:restarts in {+}
@2:2:Ari:restarts | @2:0:restarts in {+}
@2:3:Ari:restarts | @2:0:restarts in {+}
@2:3:Ari:restarts | @2:S:Ari:aryrestarts in {3}
# dynamic restarts
@2:1:Dyn:restarts | @2:0:restarts in {D}
@2:S:Dyn:aryrestarts | @2:0:restarts in {D}
@2:2:Dyn:restarts | @2:0:restarts in {D}
@2:3:Dyn:restarts | @2:0:restarts in {D}
@2:1:counter-restarts | @2:S:counterCond in {yes}
@2:1:counter-restarts | @2:0:restarts in {F,D,L,x,+}
@2:2:counter-restarts | @2:S:counterCond in {yes}
@2:2:counter-restarts | @2:0:restarts in {F,D,L,x,+}
@2:1:block-restarts | @2:0:block-restarts in {1000,2000,5000,7500,10000}
@2:2:block-restarts | @2:0:block-restarts in {1000,2000,5000,7500,10000}
# deletion
@2:deletion | @2:S:deletion in {no}
@2:1:deletion | @2:S:deletion in {yes}
@2:2:deletion | @2:S:deletion in {yes}
@2:3:deletion | @2:S:deletion in {yes}
@2:1:del-init | @2:S:deletion in {yes}
@2:2:del-init | @2:S:deletion in {yes}
@2:3:del-init | @2:S:deletion in {yes}
@2:del-max | @2:S:deletion in {yes}
@2:del-estimate | @2:S:deletion in {yes}
@2:del-on-restart | @2:S:deletion in {yes}
@2:1:del-glue | @2:S:deletion in {yes}
@2:2:del-glue | @2:S:deletion in {yes}
@2:0:del-cfl | @2:S:deletion in {yes}
@2:1:del-cfl | @2:0:del-cfl in {F,L,x,+}
@2:2:G:del-cfl | @2:0:del-cfl in {x}
@2:2:A:del-cfl | @2:0:del-cfl in {+}
@2:3:del-cfl | @2:0:del-cfl in {x,+}
@2:del-grow | @2:S:del-grow in {no}
@2:1:del-grow | @2:S:del-grow in {yes}
@2:2:del-grow | @2:S:del-grow in {yes}
@2:S:growSched | @2:S:del-grow in {yes}
@2:3:del-grow | @2:S:growSched in {yes}
@2:4:del-grow | @2:S:growSched in {yes}
@2:5:G:del-grow | @2:3:del-grow in {x}
@2:5:A:del-grow | @2:3:del-grow in {+}
@2:6:del-grow | @2:3:del-grow in {x,+}
{@2:S:deletion=yes, @2:0:del-cfl=no, @2:S:del-grow=no}
{@2:S:deletion=no, @2:S:del-grow=yes}
# misc
@2:1:strengthen | @2:0:strengthen in {local,recursive}
@2:2:strengthen | @2:0:strengthen in {local,recursive}
@2:contraction | @2:S:contraction in {yes}
@2:No:contraction | @2:S:contraction in {no}
@2:2:update-lbd | @2:1:update-lbd in {less,glucose,pseudo}
# Forbidden:
# {@1:F:restart-on-model=yes, @1:enum-mode=bt}
